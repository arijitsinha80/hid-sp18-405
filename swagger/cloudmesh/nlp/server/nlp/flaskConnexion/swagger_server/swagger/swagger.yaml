---
swagger: "2.0"
info:
  description: "A simple service to get some nlp features such as part of speech tagging,\
    \ lemmatization, consituency parsing etc given an input string as a sentence using\
    \ swagger -2.0 specification and codegen"
  version: "0.0.1"
  title: "postag"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Cloudmesh REST Service Example"
  license:
    name: "Apache"
host: "localhost:8080"
basePath: "/nlp"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /pos/{input}:
    get:
      operationId: "pos_input_get"
      parameters:
      - name: "input"
        in: "path"
        description: "Sentence to be tagged"
        required: true
        type: "string"
      responses:
        200:
          description: "Tagged sentences"
          schema:
            $ref: "#/definitions/TAGGED"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /entity/{input}:
    get:
      operationId: "entity_input_get"
      parameters:
      - name: "input"
        in: "path"
        description: "Sentence to be parsed"
        required: true
        type: "string"
      responses:
        200:
          description: "Named Entities"
          schema:
            $ref: "#/definitions/ENTITY"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /depparse/{input}:
    get:
      operationId: "depparse_input_get"
      parameters:
      - name: "input"
        in: "path"
        description: "Sentence to be dependency-parsed"
        required: true
        type: "string"
      responses:
        200:
          description: "Dependency-Parsed sentences"
          schema:
            $ref: "#/definitions/DEPPARSED"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /all/{input}:
    get:
      operationId: "all_input_get"
      parameters:
      - name: "input"
        in: "path"
        description: "Sentence to be analyzed"
        required: true
        type: "string"
      responses:
        200:
          description: "All linguistic features"
          schema:
            $ref: "#/definitions/ALLFEATURE"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  TAGGED:
    type: "object"
    required:
    - "tags"
    - "tokens"
    properties:
      tokens:
        type: "string"
      tags:
        type: "string"
    example:
      tokens: "tokens"
      tags: "tags"
  ENTITY:
    type: "object"
    required:
    - "entities"
    - "tokens"
    properties:
      tokens:
        type: "string"
      entities:
        type: "string"
    example:
      entities: "entities"
      tokens: "tokens"
  DEPPARSED:
    type: "object"
    required:
    - "parsetree"
    - "tokens"
    properties:
      tokens:
        type: "string"
      parsetree:
        type: "string"
    example:
      tokens: "tokens"
      parsetree: "parsetree"
  ALLFEATURE:
    type: "object"
    required:
    - "entities"
    - "parsetree"
    - "tags"
    - "tokens"
    properties:
      tokens:
        type: "string"
      parsetree:
        type: "string"
      entities:
        type: "string"
      tags:
        type: "string"
    example:
      entities: "entities"
      tokens: "tokens"
      parsetree: "parsetree"
      tags: "tags"
